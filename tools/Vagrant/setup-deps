#!/usr/bin/env bash
# This script will be used to install dependencies for all the Inscribe applications

# setup the git identities
git config --global user.name "Diptesh Choudhuri"
git config --global user.email "ignisda2001@gmail.com"

# remove the default fish shell prompt
set fish_greeting

# install Gitzer to the system
curl -sSL https://raw.githubusercontent.com/IgnisDa/Gitzer/main/get-gitzer.py | python3

# replace the default file content viewer (cat) with bat
sudo ln -s /usr/bin/batcat /usr/bin/bat

# load all my system configs
rm -rf $HOME/.config
git clone https://github.com/IgnisDa/linux-configs.git $HOME/.config

# use the starship prompt
curl -fsSL https://starship.rs/install.sh > /tmp/install.sh
chmod +x /tmp/install.sh
/tmp/install.sh --force

# rust installer
curl https://sh.rustup.rs -sSf | sh -s -- -y


# set the default interactive shell as fish
echo "if [[ \$(ps --no-header --pid=\$PPID --format=cmd) != \"fish\" ]]" >> $HOME/.bashrc
echo "then" >> $HOME/.bashrc
echo "   exec fish" >> $HOME/.bashrc
echo "fi" >> $HOME/.bashrc

# add WakaTime to prevent prompt from popping up
echo "[settings]" >> $HOME/.wakatime.cfg
echo "api_key = f7cc9182-5527-4bf4-9d2a-2c610994945d" >> $HOME/.wakatime.cfg

# change to the project folder
cd "$HOME/Inscribe"
# install the dependencies for the django application
cd "$backend_folder"
poetry config virtualenvs.in-project "true"
poetry install

# we prefer not to keep the virtual environment as a part of the synced directory for
# performance reasons, hence we create a folder to store all of them and use symbolic links
# for the project purposes
backend_folder="inscribe"
cache_folder="$HOME/.project-cache/Inscribe"
backend_cache="$cache_folder/$backend_folder"

mkdir -p "$backend_cache"

# for the backend project folder
mv "$HOME/Inscribe/.venv" "$backend_cache/.venv"
ln -s "$backend_cache/.venv" "$HOME/Inscribe/.venv"
